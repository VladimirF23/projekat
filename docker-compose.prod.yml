version: '3.8'

services:
  flask-app:
    build: .
    container_name: flask_app
    env_file:
      - ./devinfoDocker.env
    ports:
      - "5000:5000"
      - "5678:5678"
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DB=${MYSQL_DB_NAME}
    depends_on:
      - redis
      - mysql_db
    volumes:
      - .:/usr/src/app
    working_dir: /usr/src/app
    entrypoint: ["/bin/bash", "./wait-for-mysql.sh"]
    networks:
      #- frontend-network
      - backend-network

  redis:
    image: redis:alpine
    container_name: redis
    env_file:
      - ./devinfoDocker.env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - backend-network
    volumes:
      - redis-data:/data

  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    env_file:
      - ./devinfoDocker.env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
    volumes:
      - mysql_db-data:/var/lib/mysql
      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - backend-network

  react_frontend:
    build:
      context: ./Frontend
    volumes:
      - ./Frontend/my-app:/app
      - react_node_modules:/app/node_modules
    command: ["npm", "start"]
    container_name: react_frontend
    ports:
      - "3000:3000"
    networks:
      - frontend-network

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - flask_app
      - react_frontend
    networks:
      - frontend-network
      - backend-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro 
      - ./nginx/certs:/etc/nginx/certs:ro 
      # Za production mi treba sigurniji nacin za dobijanje certifikata kao Docker Secrets
      # ili da ih bake-ujem ako su public certificates izdati od CA
      - ./Frontend/my-app/build:/usr/share/nginx/html:ro # Mount build-ovan React app ovde  Ovo je za production posto necemo koristiti React Dev Server

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge

volumes:
  mysql_db-data:
  redis-data:
  react_node_modules:
