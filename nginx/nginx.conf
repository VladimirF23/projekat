# nginx/nginx.conf

events {}

#main block za config HTTP settings-a za sve server block-ove
#sav routing, SSL, proxying etc je konfigurisan unutar ovoga
http {

    #upstream kreaira load balancer target zvan flask_backend koji pointuje ka service name-u (u docker-composu mog flask app-a) 
    #koji trci na portu 5000
    upstream flask_backend {
        server flask-app:5000;  #Govori nginx-u da forwarduje requesto-ve ka Flask app-u na port 5000,  flask service name u docker-compose-u
    }

    server {
        listen 443 ssl;         #slusa na portu 443(HTTPS),ssl keyword omogucava SSL/TLS na ovom portu
        server_name localhost;  #domain name koji ocekuje NGINX u requestovima

        ssl_certificate /etc/nginx/certs/localhost.pem;             #ssl certifikat
        ssl_certificate_key /etc/nginx/certs/localhost-key.pem;     #privatan key mkcert to nam treba za HTTPS konekciju

        # Proxy API requests
        #u React-u pozive ka API cemo dodavati /api/ da ne bih ih mesali sa ostalim react stvarima
        # a ovde ce nginx skidati /api/
        location /api/ {                                            #govori nginx ako request pocinje sa api da ga posalje Flask backend-u
            proxy_pass http://flask_backend/;                       #da bi nginx mogao da komunicira sa flask contianerom stavlja se ovde flask_backend tj ime servica u docker compose, ako bi stavio local host to bi bio nginx container !
            proxy_set_header Host $host;                            #Host cuva originalni host header, tj ogirinalni client info
            proxy_set_header X-Real-IP $remote_addr;                #setuje clientov IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  #listuje sve client IP-eve u chain (ako ima proksi pre nginx-a), ovo nam treba za flask da bi HTTP enforcovali i logovali IP
        }

        # Serve React static files
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
        }
    }
}
